name: update-build-cache
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      packages:
        description: 'Packages to build (space-separated, leave empty for all)'
        required: false
        type: string
        default: ''
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - main
    paths:
      - "flake.nix"
      - "flake.lock"
      - "pkgs/**"

permissions:
  contents: write

env:
  CACHIX_NAME: liberodark

jobs:
  update-build-cache:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: cachix/install-nix-action@v31.5.2
        with:
          install_url: https://nixos.org/nix/install
          extra_nix_config: |
            auto-optimise-store = true
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes
            accept-flake-config = true
            max-jobs = auto
            cores = 0

      - uses: cachix/cachix-action@v16
        with:
          name: ${{ env.CACHIX_NAME }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Update flake
        run: |
          export NIX_CONFIG="access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}"
          nix flake update

      - name: Build and push packages
        run: |
          set -euo pipefail

          DEFAULT_PACKAGES=(
            #"torzu"
            #"suyu"
            #"linuxPackages_6_6_bore"
            "linuxPackages_6_12_bore"
            "linuxPackages_6_15_bore"
            "linuxPackages_6_16_bore"
            "linuxPackages_jovian"
          )

          PACKAGES="${{ inputs.packages }}"
          [ -z "$PACKAGES" ] && PACKAGES="${DEFAULT_PACKAGES[*]}"

          FAILED=""
          for pkg in $PACKAGES; do
            echo "::group::Building $pkg"
            STORE_PATH=$(nix eval .#$pkg.outPath --raw 2>/dev/null || true)

            if [ -n "$STORE_PATH" ] && nix store info --store https://${{ env.CACHIX_NAME }}.cachix.org $STORE_PATH &>/dev/null; then
              echo "✓ $pkg (already in cache)"
            else
              if nix build .#$pkg --no-link --print-build-logs; then
                nix build .#$pkg --json | jq -r '.[0].outputs.out' | cachix push ${{ env.CACHIX_NAME }} || true
                echo "✓ $pkg"
              else
                echo "✗ $pkg (build failed)"
                FAILED="$FAILED $pkg"
              fi
            fi
            echo "::endgroup::"
          done

          if [ -n "$FAILED" ]; then
            echo "Failed packages:$FAILED"
            exit 1
          fi

      - uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          add: flake.lock
          message: "chore: Update flake.lock"

      - name: Create issue on failure
        if: failure() && github.event_name == 'schedule'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Automated build failed',
              body: `Weekly build failed: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              labels: ['bug', 'ci']
            });
